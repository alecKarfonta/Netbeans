package eBay;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.text.NumberFormat;
import java.util.ArrayList;

/**
 *
 * @author alec
 */
public class ebayApiGui extends javax.swing.JFrame {
    
    /**
     * Creates new form ebayApiGui
     */
    public ebayApiGui() {
        initComponents();
        jcbCategory.addItem("Movies");
        jcbCategory.addItem("DVDs & Blu-ray Discs");
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jlAveragePrice = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcbCategory = new javax.swing.JComboBox();
        jtfSearchTerm = new javax.swing.JTextField();
        jbSearch = new javax.swing.JButton();
        jbClearResults = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jtbConditionNew = new javax.swing.JToggleButton();
        jtbConditionUsed = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jtbConditionManufacturerRefurb = new javax.swing.JToggleButton();
        jtbConditionSellerRefurb = new javax.swing.JToggleButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaSoldData = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jlAverageSoldPrice = new javax.swing.JLabel();
        jlNumSold = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jlBellAveragePrice = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jlBellNumberRemoved = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaUnsoldData = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jlAverageUnsoldPrice = new javax.swing.JLabel();
        jlNumUnsold = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("eBay Search Completed Listings"));

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Search Term:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Category:");

        jcbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));
        jcbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoryActionPerformed(evt);
            }
        });

        jtfSearchTerm.setText("iphone 5 16gb verizon");
        jtfSearchTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchTermActionPerformed(evt);
            }
        });
        jtfSearchTerm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfSearchTermKeyReleased(evt);
            }
        });

        jbSearch.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jbSearch.setText("Search");
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });
        jbSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbSearchKeyPressed(evt);
            }
        });

        jbClearResults.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jbClearResults.setText("Clear");
        jbClearResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearResultsActionPerformed(evt);
            }
        });

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtbConditionNew.setSelected(true);
        jtbConditionNew.setText("New");

        jtbConditionUsed.setText("Used");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Refurbished"));

        jtbConditionManufacturerRefurb.setText("Manufacturer");
        jtbConditionManufacturerRefurb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbConditionManufacturerRefurbActionPerformed(evt);
            }
        });

        jtbConditionSellerRefurb.setText("Seller");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jtbConditionManufacturerRefurb)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtbConditionSellerRefurb))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jtbConditionManufacturerRefurb)
                .add(jtbConditionSellerRefurb))
        );

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .add(jtbConditionNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jtbConditionUsed, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {jtbConditionNew, jtbConditionUsed}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtbConditionNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtbConditionUsed, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {jtbConditionNew, jtbConditionUsed}, org.jdesktop.layout.GroupLayout.VERTICAL);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                        .add(jLabel3)
                        .add(12, 12, 12)
                        .add(jcbCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 358, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(119, 119, 119))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jtfSearchTerm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 482, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)))
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jbSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 193, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbClearResults, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 193, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jbSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(3, 3, 3)
                        .add(jbClearResults, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jtfSearchTerm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jcbCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jtaSoldData.setColumns(20);
        jtaSoldData.setRows(5);
        jScrollPane2.setViewportView(jtaSoldData);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("Number Sold:");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setText("Average Price:");

        jlAverageSoldPrice.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlAverageSoldPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlNumSold.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlNumSold.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setText("Bell Average:");

        jlBellAveragePrice.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlBellAveragePrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel8.setText("Number Removed:");

        jlBellNumberRemoved.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlBellNumberRemoved.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel6)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jlAverageSoldPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlNumSold, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(30, 30, 30)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jlBellAveragePrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jlBellNumberRemoved, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jlAverageSoldPrice, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel6))
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jlBellAveragePrice, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel7)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jlNumSold, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel5))
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jlBellNumberRemoved, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel8)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtaUnsoldData.setColumns(20);
        jtaUnsoldData.setRows(5);
        jScrollPane1.setViewportView(jtaUnsoldData);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel10.setText("Number Unsold:");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel11.setText("Average Price:");

        jlAverageUnsoldPrice.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlAverageUnsoldPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlNumUnsold.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlNumUnsold.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11)
                    .add(jLabel10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jlAverageUnsoldPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlNumUnsold, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 50, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jlAverageUnsoldPrice, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jlNumUnsold, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel10))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel4.setText("Sold");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel9.setText("Unsold");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 748, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(19, 19, 19))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(86, 86, 86)
                                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 572, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(342, 342, 342)
                                .add(jLabel4)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 448, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(45, 45, 45))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(220, 220, 220))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(jLabel9)
                        .add(388, 388, 388))))
        );

        jPanel7Layout.linkSize(new java.awt.Component[] {jScrollPane1, jScrollPane2}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .add(jScrollPane1))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(1878, 1878, 1878)
                        .add(jlAveragePrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1530, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(131, 131, 131)
                        .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(397, 397, 397)
                        .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(189, 189, 189)
                        .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(jlAveragePrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1583, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbClearResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearResultsActionPerformed
        jlNumSold.setText("");
        jlAverageSoldPrice.setText("");
        jlNumUnsold.setText("");
        jlAverageUnsoldPrice.setText("");
        jtaSoldData.setText("");
        jtaUnsoldData.setText("");
        
    }//GEN-LAST:event_jbClearResultsActionPerformed

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        performSearch();
    }//GEN-LAST:event_jbSearchActionPerformed

    private void jcbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoryActionPerformed
                
    }//GEN-LAST:event_jcbCategoryActionPerformed

    private void jtfSearchTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchTermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfSearchTermActionPerformed

    private void jbSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbSearchKeyPressed
         // TODO add your handling code here:
    }//GEN-LAST:event_jbSearchKeyPressed

    private void jtfSearchTermKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchTermKeyReleased
        if (evt.getKeyCode() == 10) {
            performSearch();
        }
    }//GEN-LAST:event_jtfSearchTermKeyReleased

    private void jtbConditionManufacturerRefurbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbConditionManufacturerRefurbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbConditionManufacturerRefurbActionPerformed

    private void performSearch() {
        try {
            // search keyword
            String searchTerm = jtfSearchTerm.getText().toString();

            String ebayApiFunction = "findCompletedItems";
            String category = "";
            
            /**/
            /*
            * // Build an ApiUrl for each page
            */
            
            String url = "http://svcs.ebay.com/services/search/FindingService/v1";
            String charset = "UTF-8";                                                          // search term for product defined
            String appID = "AlecKarf-c751-4170-85db-6d95d55e7c73";                             // api key
            
            // create the part of the params that will not change per page search
            StringBuilder constantParams = new StringBuilder();
            constantParams.append("OPERATION-NAME=").append(ebayApiFunction);                                       // api function name
            constantParams.append("&SERVICE-VERSION=").append(URLEncoder.encode("1.12.0", charset));                // api version
            constantParams.append("&SECURITY-APPNAME=").append(URLEncoder.encode(appID, charset));                  // api key
            constantParams.append("&RESPONSE-DATA-FORMAT=").append(URLEncoder.encode("Json", charset));             // date format
            //urlParamsBuilder.append("&REST-PAYLOAD");
            constantParams.append("&keywords=").append(URLEncoder.encode(searchTerm, charset));                     // search term
            constantParams.append("&paginationInput.entriesPerPage=").append(URLEncoder.encode("100", charset));    // 100 entries per page
            constantParams.append("&sortOrder=").append(URLEncoder.encode("BestMatch", charset));                   // sort by best results
            constantParams.append(getCategories());
            constantParams.append(getConditions());
            
            
            int pages = 1;
            ApiUrl[] ebayApiUrls = new ApiUrl[pages];
            String pageNumberParam;
            
            // create an arraylist to store all the items from each page
            ArrayList<EbayItem> ebayItems = new ArrayList<EbayItem>();
            
            // loop through the pages adding their contents to ebayItems
            for (int index = 0; index < pages; index++) {
                pageNumberParam = "&paginationInput.pageNumber=" + URLEncoder.encode((index + 1) + "", charset);  // designate page number
                ebayApiUrls[index] = new ApiUrl(url, constantParams + pageNumberParam);
                System.out.println(ebayApiUrls[index].getUrl());                          // print urls
                ebayItems.addAll(JsonArrayFunctions.getEbayItemsFromApi(ebayApiUrls[index]));
            }
            
            ArrayList<EbayItem> soldItems = new ArrayList<EbayItem>();
            ArrayList<EbayItem> unsoldItems = new ArrayList<EbayItem>();
            
            for (EbayItem item : ebayItems) {
                if (item.isSold()) {
                    soldItems.add(item);
                }
                else {
                    unsoldItems.add(item);
                }
                
            }/**/
            
            double soldTotal = 0.0 , unsoldTotal = 0.0;
            int soldCount = 0, unsoldCount = 0;
            double soldAverage, unsoldAverage;
            
            for (EbayItem item : soldItems) {
                soldTotal += item.getPrice();
                soldCount++;
                jtaSoldData.append("Title: " + item.getTitle() + "\n");
                jtaSoldData.append("Price: " + item.getPrice() + "\n");
                jtaSoldData.append("----------------------------------------" + "\n");
            }
            
            for (EbayItem item : unsoldItems) {
                unsoldTotal += item.getPrice();
                unsoldCount++;
                jtaUnsoldData.append("Title: " + item.getTitle() + "\n");
                jtaUnsoldData.append("Price: " + item.getPrice() + "\n");
                jtaUnsoldData.append("----------------------------------------" + "\n");
            }
            
            soldAverage = soldTotal/soldCount;
            unsoldAverage = unsoldTotal/unsoldCount;
            NumberFormat nf = NumberFormat.getCurrencyInstance( java.util.Locale.US );
            
            jlAverageSoldPrice.setText(nf.format(soldAverage) + "");
            jlNumSold.setText(soldCount + "");
            
            jlAverageUnsoldPrice.setText(nf.format(unsoldAverage) + "");
            jlNumUnsold.setText(unsoldCount + "");
            
            
            /*
             * // get the bell average 
             */
            ArrayList<Double> bellSoldPrices = new ArrayList<Double>();
            for (int index =  0; index < soldItems.size(); index++) {
                bellSoldPrices.add(soldItems.get(index).getPrice());
            }
            
            bellSoldPrices = MathMethods.applyBellCurve(bellSoldPrices, 2);
            double mean = 0.0;
            double total = 0.0;
            for (int index = 0; index < bellSoldPrices.size(); index++) {
                total += bellSoldPrices.get(index);
            }
            
            mean = total / bellSoldPrices.size();
            
            jlBellAveragePrice.setText(mean + "");
            jlBellNumberRemoved.setText((soldItems.size() - bellSoldPrices.size()) + "");
            
            
            
        }
        catch (UnsupportedEncodingException ex) {
            System.out.println(ex.toString());             
            }
        catch (NullPointerException ex) {
            System.out.println("No Results");
            }
    }
    
    private String getCategories() {
        StringBuilder category = new StringBuilder(jcbCategory.getSelectedItem().toString());
        String charset = "UTF-8";
        if (jcbCategory.getSelectedIndex() != 0) {
            category.append("&CategoryId");
            
        }
        return "";
    }
    
    private String getConditions() {
        
        try { 
            StringBuilder conditions = new StringBuilder("");
            String charset = "UTF-8";
            /*
            * // get the conditions  
            */
            int conditionCount = 0;
            if (jtbConditionNew.isSelected()                        // if any of the condition buttons are selected
                    || jtbConditionUsed.isSelected() 
                    || jtbConditionManufacturerRefurb.isSelected() 
                    || jtbConditionSellerRefurb.isSelected() ) {
                
                conditions.append("&itemFilter(0).name=").append(URLEncoder.encode("Condition", charset)); // create the itemFilter
                
                if (jtbConditionNew.isSelected()) {
                    conditions.append("&itemFilter(0).value(").append(conditionCount++).append(")=").append(URLEncoder.encode("1000", charset));
                }
                if (jtbConditionUsed.isSelected()) {
                    conditions.append("&itemFilter(0).value(").append(conditionCount++).append(")=").append(URLEncoder.encode("3000", charset));
                }
                if (jtbConditionManufacturerRefurb.isSelected()) {
                    conditions.append("&itemFilter(0).value(").append(conditionCount++).append(")=").append(URLEncoder.encode("2000", charset));
                }
                if (jtbConditionSellerRefurb.isSelected()) {
                    conditions.append("&itemFilter(0).value(").append(conditionCount++).append(")=").append(URLEncoder.encode("2500", charset));
                }
            }
            
            return conditions.toString();
            }
        catch (UnsupportedEncodingException ex) {
            System.out.println(ex.toString());             
            }
        catch (NullPointerException ex) {
            System.out.println("No Results");
            }
            
        
        return "";              // return new if unrecognized conditionInt
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ebayApiGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ebayApiGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ebayApiGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ebayApiGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ebayApiGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbClearResults;
    private javax.swing.JButton jbSearch;
    private javax.swing.JComboBox jcbCategory;
    private javax.swing.JLabel jlAveragePrice;
    private javax.swing.JLabel jlAverageSoldPrice;
    private javax.swing.JLabel jlAverageUnsoldPrice;
    private javax.swing.JLabel jlBellAveragePrice;
    private javax.swing.JLabel jlBellNumberRemoved;
    private javax.swing.JLabel jlNumSold;
    private javax.swing.JLabel jlNumUnsold;
    private javax.swing.JTextArea jtaSoldData;
    private javax.swing.JTextArea jtaUnsoldData;
    private javax.swing.JToggleButton jtbConditionManufacturerRefurb;
    private javax.swing.JToggleButton jtbConditionNew;
    private javax.swing.JToggleButton jtbConditionSellerRefurb;
    private javax.swing.JToggleButton jtbConditionUsed;
    private javax.swing.JTextField jtfSearchTerm;
    // End of variables declaration//GEN-END:variables
}
